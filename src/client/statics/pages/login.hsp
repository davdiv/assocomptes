var klass = require("hsp/klass");
var titleImage = require("../widgets/titleImage.hsp.js");
var login = require("../login");

var LoginCtrl = klass({
    attributes : {
        page : {
            type : "object"
        },
        controller : {
            type : "object"
        }
    },
    $init : function () {
        this.data = this.controller.data;
    },
    login : function () {
        this.page.processing = true;
        this.data.password = "";
        login.login({
            login : this.data.login,
            password : this.data.password
        }).thenSync(this.page.remove.bind(this.page));
    }
});

# template iconTemplate(page)
    <span class="glyphicon glyphicon-lock"></span> {page.title}
# /template

# template template using c:LoginCtrl
    {let loginModule = login}
    <#titleImage image="img-lg-lock" title="Authentification"/>
    <div class="container">
        <div class="row">
            <div class="col-sm-6 col-sm-offset-3 col-xs-10 col-xs-offset-1">
                {if loginModule.data.connected}
                    <p>Vous êtes connecté en tant qu'utilisateur <b>{loginModule.data.userDisplayName}</b>.</p>
                    <button type="submit" class="btn btn-default" onclick="{login.logout()}">Se déconnecter</button>
                {else}
                    <div class="form-group">
                        <label for="username">Nom d'utilisateur</label>
                        <input type="text" class="form-control" id="username" placeholder="Nom d'utilisateur" value="{c.data.login}">
                    </div>
                    <div class="form-group">
                        <label for="password">Mot de passe</label>
                        <input type="password" class="form-control" id="password" placeholder="Mot de passe" value="{c.data.password}">
                    </div>
                    <button type="submit" class="btn btn-default" onclick="{c.login()}">Connexion</button>
                {/if}
            </div>
        </div>
    </div>
# /template

// this wrapper template is needed because of a bug in hashspace
# template wrapperTemplate(page, controller)
   <#template page="{page}" controller="{controller}"/>
# /template

module.exports = klass({
    template : wrapperTemplate,
    iconTemplate : iconTemplate,
    init : function () {
        this.data = {
            login : login.data.userLogin,
            password : ""
        };
    }
});
