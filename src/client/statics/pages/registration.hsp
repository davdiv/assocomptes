var promise = require("noder-js/promise");
var editable = require("../components/editable.hsp.js");

var delay = function (returnValue, delay) {
    var defer = promise.defer();
    setTimeout(function() {
        if (Math.floor(Math.random() *2) == 0 ) {
            defer.resolve(returnValue);
        } else {
            defer.reject(new Error("Random error. Please retry!"));
        }
    },delay);
    return defer.promise;
};

var refresh = function(event) {
    event.returnValue = delay({
        myValue:"",
        myTime: new Date().getTime()
    }, 2000);
};

var save = function (event, value) {
    event.returnValue = delay(value, 1000);
};

# template viewer(data)
    {data.myValue}<br>{data.myTime}
# /template

# template editor(data)
    <input type="text" value="{data.myValue}"><br>{data.myTime}
# /template

# template template(page)
    <div class="container-fluid">
        <#editable savedData="{page.savedData}" editedData="{page.editedData}" onEdit="{refresh(event)}" onRefresh="{refresh(event)}" onSave="{save(event, page.editedData)}" viewer="{viewer}" editor="{editor}"/>
    </div>
# /template

# template iconTemplate(page)
    <span class="glyphicon glyphicon-file"></span> {page.title}
# /template

module.exports = {
    template : template,
    iconTemplate : iconTemplate,
    init: function (page) {
        page.savedData = delay({myTime:"initial time", myValue:"initial value"},2000);
    }
};
