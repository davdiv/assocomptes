<script>
var klass = require("hsp/klass");

function parseRegExp(regExp) {
    if (!regExp) {
        return null;
    }
    try {
        return new RegExp(regExp);
    } catch (regExp) {
        return null;
    }
}

function formatRegExp(value) {
    if (value) {
        return value.source;
    }
    return "";
}

var RegExpFieldController = klass({
	$attributes: {
		value: {
			binding: "2-way",
			type: "object"
		},
		error: {
			binding: "2-way",
			type: "boolean"
		}
	},
	$init: function() {
	  this.$onValueChange();
	},
	$onValueChange : function () {
		this.internalValue = formatRegExp(this.value);
		this.updateError();
	},
	$onInternalValueChange : function() {
		this.value = parseRegExp(this.internalValue);
		this.updateError();
	},
	updateError : function () {
		this.error = this.internalValue && !this.value;
	},
	blur: function () {
		if (!this.error) {
			this.internalValue = formatRegExp(this.value);
		}
	}
});
</script>

<template id="regExpField" ctrl="RegExpFieldController as c">
<input type="text" value="{c.internalValue}" onblur="{c.blur()}" class="form-control input-sm"/>
</template>

<script>
module.exports = regExpField;
</script>
