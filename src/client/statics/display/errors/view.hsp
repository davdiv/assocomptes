<script>
var klass = require("hsp/klass");
var AuthenticationError = require("../../login").AuthenticationError;
var NotFoundError = require("../../notFoundError");
var SimpleError = require("../../simpleError");
var ValidationError = require("../../validation/utils/validationError");
var validationErrorsList = require("./utils/validationErrorsList");
var server = require("../../persistence/utils/server");

var Ctrl = klass({
    $attributes:{
        "class": {
            type:"object",
            binding:"1-way"
        },
        error: {
            type:"object",
            binding:"1-way"
        }
    },
    $init: function () {
        this.$onErrorChange();
    },
    $onErrorChange : function () {
        var error = this.error;
        if (error instanceof AuthenticationError) {
            this.template = showAuthenticationError;
        } else if (error instanceof server.ConnectionError) {
            this.template = showServerConnectionError;
        } else if (error instanceof server.UnknownError){
            this.template = showServerUnknownError;
        } else if (error instanceof ValidationError) {
            this.template = showValidationError;
        } else if (error instanceof NotFoundError) {
            this.template = showNotFoundError;
        } else if (error instanceof SimpleError) {
            this.template = showSimpleError;
        } else {
            this.template = showDefaultError;
        }
        this.showDetails = false;
    },
    toggleDetails : function (event) {
        event.preventDefault();
        this.showDetails = !this.showDetails;
    }
});
</script>

<template id="toggleDetails" args="c">
    <a href="#" onclick="{c.toggleDetails($event)}">{if c.showDetails}Masquer{else}Afficher{/if} les détails</a>
</template>

<template id="showError" ctrl="Ctrl as c">
<div class="alert alert-danger {c.class}">
<#c.template c="{c}"/>
</div>
</template>

<template id="showValidationError" args="c">
{let errors = c.error.errors}
{errors.length} erreurs se sont produites. Veuillez les corriger avant de réessayer.
<ul>
{foreach error in errors}
<li>{if error.path.length > 0}<small>{error.path.join(".")}:</small> {/if}{validationErrorsList[error.id] || "Erreur inconnue"}</li>
{/foreach}
</ul><br>
</template>

<template id="showServerConnectionError" args="c">
La connexion au serveur a échoué.
</template>

<template id="showAuthenticationError" args="c">
Erreur d'authentification:<br>
{c.error.message}
</template>

<template id="showServerUnknownError" args="c">
Le serveur a renvoyé une erreur non reconnue ({c.error.status}).
<#toggleDetails c="{c}" />
{if c.showDetails}<br><br><pre>{c.error.responseText}</pre>{/if}
</template>

<template id="showNotFoundError" args="c">
Le document demandé n'a pas pu être trouvé.
</template>

<template id="showSimpleError" args="c">
{c.error.message}
</template>

<template id="showDefaultError" args="c">
Erreur inconnue<br>
{c.error}
</template>

<script>
module.exports = showError;
</script>
