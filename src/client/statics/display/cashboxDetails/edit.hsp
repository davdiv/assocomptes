<script>
var klass = require("hsp/klass");

var formatCurrency = require("../../utils/formatCurrency");
var cashCountField = require("./utils/cashCountField.hsp.js");
var dateField = require("../dates/field.hsp.js");
var amountField = require("../../widgets/amountField.hsp.js");
var server = require("../../persistence/utils/server");

var ticketParseRegExp = /\r?\n-+\r?\n([\s\S]*)\r?\n-+\r?\n/;
var splitLineRegExp = /\r?\n/;
var lineRegExp = /^\s*([0-9.]+)\s+([0-9.]+)\s+([0-9.]+)\s*$/;
var nonAllowedCharsRegExp = /[^:\r\n0-9a-zA-Z\(\)\.\s-]/g;

var Ctrl = klass({
    $attributes: {
        data: {
            type: "object",
            binding: "1-way"
        },
        onchange: {
            type: "callback"
        }
    },
    addCheck : function() {
        var data = this.data;
        if (!data.checks) {
            data.checks = [];
        }
        data.checks.push({
            total: 0
        });
        this.onchange();
    },
    removeCheck: function(index) {
        this.data.checks.splice(index,1);
        this.onchange();
    },
    clear: function (array) {
        array.forEach(function (item) {
            item.number = 0;
        });
        this.onchange();
    },
    retrieveTicket: function (type, array) {
        var self = this;
        server("GET", "tickets/" + type + "/latest").then(function(ticket) {
            var ticketString = ticket.data.replace(nonAllowedCharsRegExp, "");
            console.log(ticketString);
            var dataMatch = ticketParseRegExp.exec(ticketString);
            var lines = dataMatch[1].split(splitLineRegExp);
            var values = Object.create(null);
            lines.forEach(function (line) {
                var lineMatch = lineRegExp.exec(line);
                var value = Number(lineMatch[1]);
                var count = Number(lineMatch[2]);
                var total = Number(lineMatch[3]);
                if (Math.abs(total - value * count) > 0.005) {
                    throw new Error("Incohérence: " + value + " x " + count + " = " + total);
                }
                values[value] = count;
            });
            array.forEach(function (item) {
                item.number = values[item.unitValue] || 0;
            });
            self.onchange();
        }).then(null, function (error) {
            console.log(error);
            alert("Erreur: " + (error.responseText || error.description || error));
        });
    }
});
</script>

<template id="itemsHeader" args="title, image, total">
    <div class="img-lg-{image} img-responsive block" style="margin-right:16px;"></div>
    <div class="block" style="min-width: 150px;">
        <h2>{title}</h2>
        <table class="table">
            <tr><th>Nombre</th><td>{total.number}</td></tr>
            <tr><th>Montant</th><td>{formatCurrency(total.total)}</td></tr>
        </table>
    </div>
</template>

<template id="itemsTable" args="title, image, total, itemsArray, controller">
    <#itemsHeader title="{title}" image="{image}" total="{total}" />
    <div>
        <button class="btn btn-link" onclick="{controller.retrieveTicket(image, itemsArray)}">Ticket</button>
        <button class="btn btn-link" onclick="{controller.clear(itemsArray)}">Effacer</button>
    </div>
    {foreach item in itemsArray}
        <#cashCountField number="{item.number}" unitValue="{item.unitValue}" onchange="{controller.onchange()}"/>
    {/foreach}
</template>

<template id="checksTable" args="title, image, total, itemsArray, controller">
    <#itemsHeader title="{title}" image="{image}" total="{total}" />
    <table class="table table-striped table-hover">
    <thead>
        <tr><th>Banque</th><th>Numéro</th><th>Date</th><th>Montant</th><th></th></tr>
    </thead>
    <tbody>
        {if itemsArray}
        {foreach index,item in itemsArray}
            <tr>
                <td><input value="{item.checkBank}" type="text" class="form-control input-sm"></td>
                <td><input value="{item.checkNumber}" type="text" class="form-control input-sm"></td>
                <td><#dateField value="{item.checkDate}"/></td>
                <td><#amountField value="{item.total}" onchange="{controller.onchange()}"/></td>
                <td><button title="Supprimer cette ligne" type="button" class="btn btn-default btn-xs" onclick="{controller.removeCheck(index)}">
                    <span class="glyphicon glyphicon-minus"></span>
                </button></td>
            </tr>
        {/foreach}
        {/if}
    </tbody>
    <tfoot>
        <tr class="active">
            <td colspan="5">
                <button title="Ajouter une ligne" type="button" class="btn btn-default btn-xs" onclick="{controller.addCheck()}">
                    <span class="glyphicon glyphicon-plus"></span>
                </button>
            </td>
        </tr>
    </tfoot>
    </table>
</template>

<template id="cashboxDetailsTemplate" ctrl="Ctrl as controller">
    <div class="row">
    <div class="col-md-4">
        <#itemsTable title="Billets" image="banknotes" total="{controller.data.total.banknotes}" itemsArray="{controller.data.banknotes}" controller="{controller}"/>
    </div>
    <div class="col-md-4">
        <#itemsTable title="Pièces" image="coins" total="{controller.data.total.coins}" itemsArray="{controller.data.coins}" controller="{controller}"/>
    </div>
    <div class="col-md-4">
        <#checksTable title="Chèques" image="checks" total="{controller.data.total.checks}" itemsArray="{controller.data.checks}" controller="{controller}"/>
    </div>
    </div>
</template>

<script>
module.exports = cashboxDetailsTemplate;
</script>
